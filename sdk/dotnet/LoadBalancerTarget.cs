// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.HCloud
{
    /// <summary>
    /// Adds a target to a Hetzner Cloud Load Balancer.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using HCloud = Pulumi.HCloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var myServer = new HCloud.Server("myServer", new HCloud.ServerArgs
    ///         {
    ///             Image = "ubuntu-18.04",
    ///             ServerType = "cx11",
    ///         });
    ///         var loadBalancer = new HCloud.LoadBalancer("loadBalancer", new HCloud.LoadBalancerArgs
    ///         {
    ///             LoadBalancerType = "lb11",
    ///             Location = "nbg1",
    ///         });
    ///         var loadBalancerTarget = new HCloud.LoadBalancerTarget("loadBalancerTarget", new HCloud.LoadBalancerTargetArgs
    ///         {
    ///             LoadBalancerId = hcloud_load_balancer.Load_balcancer.Id,
    ///             ServerId = myServer.Id,
    ///             Type = "server",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    public partial class LoadBalancerTarget : Pulumi.CustomResource
    {
        [Output("loadBalancerId")]
        public Output<int> LoadBalancerId { get; private set; } = null!;

        [Output("serverId")]
        public Output<int?> ServerId { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("usePrivateIp")]
        public Output<bool> UsePrivateIp { get; private set; } = null!;


        /// <summary>
        /// Create a LoadBalancerTarget resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LoadBalancerTarget(string name, LoadBalancerTargetArgs args, CustomResourceOptions? options = null)
            : base("hcloud:index/loadBalancerTarget:LoadBalancerTarget", name, args ?? new LoadBalancerTargetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LoadBalancerTarget(string name, Input<string> id, LoadBalancerTargetState? state = null, CustomResourceOptions? options = null)
            : base("hcloud:index/loadBalancerTarget:LoadBalancerTarget", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LoadBalancerTarget resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LoadBalancerTarget Get(string name, Input<string> id, LoadBalancerTargetState? state = null, CustomResourceOptions? options = null)
        {
            return new LoadBalancerTarget(name, id, state, options);
        }
    }

    public sealed class LoadBalancerTargetArgs : Pulumi.ResourceArgs
    {
        [Input("loadBalancerId", required: true)]
        public Input<int> LoadBalancerId { get; set; } = null!;

        [Input("serverId")]
        public Input<int>? ServerId { get; set; }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("usePrivateIp")]
        public Input<bool>? UsePrivateIp { get; set; }

        public LoadBalancerTargetArgs()
        {
        }
    }

    public sealed class LoadBalancerTargetState : Pulumi.ResourceArgs
    {
        [Input("loadBalancerId")]
        public Input<int>? LoadBalancerId { get; set; }

        [Input("serverId")]
        public Input<int>? ServerId { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("usePrivateIp")]
        public Input<bool>? UsePrivateIp { get; set; }

        public LoadBalancerTargetState()
        {
        }
    }
}
