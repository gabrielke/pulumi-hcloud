// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.HCloud
{
    public static class GetImage
    {
        public static Task<GetImageResult> InvokeAsync(GetImageArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetImageResult>("hcloud:index/getImage:getImage", args ?? new GetImageArgs(), options.WithVersion());
    }


    public sealed class GetImageArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public int? Id { get; set; }

        [Input("mostRecent")]
        public bool? MostRecent { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("selector")]
        public string? Selector { get; set; }

        [Input("withSelector")]
        public string? WithSelector { get; set; }

        [Input("withStatuses")]
        private List<string>? _withStatuses;
        public List<string> WithStatuses
        {
            get => _withStatuses ?? (_withStatuses = new List<string>());
            set => _withStatuses = value;
        }

        public GetImageArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetImageResult
    {
        public readonly string Created;
        public readonly string Deprecated;
        public readonly string Description;
        public readonly int? Id;
        public readonly ImmutableDictionary<string, object> Labels;
        public readonly bool? MostRecent;
        public readonly string Name;
        public readonly string OsFlavor;
        public readonly string OsVersion;
        public readonly bool RapidDeploy;
        public readonly string? Selector;
        public readonly string Type;
        public readonly string? WithSelector;
        public readonly ImmutableArray<string> WithStatuses;

        [OutputConstructor]
        private GetImageResult(
            string created,

            string deprecated,

            string description,

            int? id,

            ImmutableDictionary<string, object> labels,

            bool? mostRecent,

            string name,

            string osFlavor,

            string osVersion,

            bool rapidDeploy,

            string? selector,

            string type,

            string? withSelector,

            ImmutableArray<string> withStatuses)
        {
            Created = created;
            Deprecated = deprecated;
            Description = description;
            Id = id;
            Labels = labels;
            MostRecent = mostRecent;
            Name = name;
            OsFlavor = osFlavor;
            OsVersion = osVersion;
            RapidDeploy = rapidDeploy;
            Selector = selector;
            Type = type;
            WithSelector = withSelector;
            WithStatuses = withStatuses;
        }
    }
}
