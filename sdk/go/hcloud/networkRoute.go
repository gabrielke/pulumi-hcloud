// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package hcloud

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

//  Provides a Hetzner Cloud Network Route to represent a Network route in the Hetzner Cloud.
type NetworkRoute struct {
	pulumi.CustomResourceState

	Destination pulumi.StringOutput `pulumi:"destination"`
	Gateway     pulumi.StringOutput `pulumi:"gateway"`
	NetworkId   pulumi.IntOutput    `pulumi:"networkId"`
}

// NewNetworkRoute registers a new resource with the given unique name, arguments, and options.
func NewNetworkRoute(ctx *pulumi.Context,
	name string, args *NetworkRouteArgs, opts ...pulumi.ResourceOption) (*NetworkRoute, error) {
	if args == nil || args.Destination == nil {
		return nil, errors.New("missing required argument 'Destination'")
	}
	if args == nil || args.Gateway == nil {
		return nil, errors.New("missing required argument 'Gateway'")
	}
	if args == nil || args.NetworkId == nil {
		return nil, errors.New("missing required argument 'NetworkId'")
	}
	if args == nil {
		args = &NetworkRouteArgs{}
	}
	var resource NetworkRoute
	err := ctx.RegisterResource("hcloud:index/networkRoute:NetworkRoute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkRoute gets an existing NetworkRoute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkRoute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkRouteState, opts ...pulumi.ResourceOption) (*NetworkRoute, error) {
	var resource NetworkRoute
	err := ctx.ReadResource("hcloud:index/networkRoute:NetworkRoute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkRoute resources.
type networkRouteState struct {
	Destination *string `pulumi:"destination"`
	Gateway     *string `pulumi:"gateway"`
	NetworkId   *int    `pulumi:"networkId"`
}

type NetworkRouteState struct {
	Destination pulumi.StringPtrInput
	Gateway     pulumi.StringPtrInput
	NetworkId   pulumi.IntPtrInput
}

func (NetworkRouteState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkRouteState)(nil)).Elem()
}

type networkRouteArgs struct {
	Destination string `pulumi:"destination"`
	Gateway     string `pulumi:"gateway"`
	NetworkId   int    `pulumi:"networkId"`
}

// The set of arguments for constructing a NetworkRoute resource.
type NetworkRouteArgs struct {
	Destination pulumi.StringInput
	Gateway     pulumi.StringInput
	NetworkId   pulumi.IntInput
}

func (NetworkRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkRouteArgs)(nil)).Elem()
}
