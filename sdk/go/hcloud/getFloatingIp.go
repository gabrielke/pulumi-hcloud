// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package hcloud

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides details about a Hetzner Cloud Floating IP.
//
// This resource can be useful when you need to determine a Floating IP ID based on the IP address.
func LookupFloatingIp(ctx *pulumi.Context, args *LookupFloatingIpArgs, opts ...pulumi.InvokeOption) (*LookupFloatingIpResult, error) {
	var rv LookupFloatingIpResult
	err := ctx.Invoke("hcloud:index/getFloatingIp:getFloatingIp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFloatingIp.
type LookupFloatingIpArgs struct {
	Id        *int    `pulumi:"id"`
	IpAddress *string `pulumi:"ipAddress"`
	Name      *string `pulumi:"name"`
	// Deprecated: Please use the with_selector property instead.
	Selector     *string `pulumi:"selector"`
	WithSelector *string `pulumi:"withSelector"`
}

// A collection of values returned by getFloatingIp.
type LookupFloatingIpResult struct {
	Description  string                 `pulumi:"description"`
	HomeLocation string                 `pulumi:"homeLocation"`
	Id           *int                   `pulumi:"id"`
	IpAddress    string                 `pulumi:"ipAddress"`
	IpNetwork    string                 `pulumi:"ipNetwork"`
	Labels       map[string]interface{} `pulumi:"labels"`
	Name         *string                `pulumi:"name"`
	// Deprecated: Please use the with_selector property instead.
	Selector     *string `pulumi:"selector"`
	ServerId     int     `pulumi:"serverId"`
	Type         string  `pulumi:"type"`
	WithSelector *string `pulumi:"withSelector"`
}
